                                            Robotics 2
                               Remote Exam ‚Äì June 5, 2020

Exercise #1
A 3R planar robot is subject to hard joint velocity limits |qÃái | ‚â§ Vi , for i = 1, 2, 3, with V1 = 1,
V2 = 1.5, and V2 = 2 [rad/s]. At the current configuration, its task Jacobian is given by

                                        ‚àí1        ‚àí1      ‚àí0.5
                                                                  
                               J=
                                      ‚àí0.366 ‚àí0.866 ‚àí0.866
                                                      T
and the task requires a Cartesian velocity v = 2 1        [m/s]. Apply the SNS algorithm to find a
feasible solution qÃá ‚àà R3 with the least possible norm, including task scaling if needed.

Exercise #2
Determine all the conditions on the constant parameters a, b, c and d, under which the following
(linear) equations can be considered the dynamic model of an actual 2-dof robot:

                             M qÃà + g = u,           with        q ‚àà R2 , u ‚àà R2 ,

where                                                                      
                                            a    b                        0
                                 M=                      ,       g=                .
                                            b    c                        d
Any guess about which type of robot this could be? Suppose now that only one generalized
coordinate is actuated by a command ua ‚àà R, while the other is passive. Which component of u
should be actuated in order to guarantee the existence of an equilibrium? If we choose a value
ua > 0, what would be the instantaneous acceleration of the other (passive) coordinate?

Exercise #3
Consider the RP robot in Fig. 1, moving in a vertical plane. The prismatic joint has a limited
range d ‚â§ q2 ‚â§ L. Derive the gravity term g(q) in the dynamic model and find the expression (in
symbolic form) of a constant Œ± > 0 that bounds k‚àÇg(q)/‚àÇqk for all q within the robot workspace.


                                                                       y0


                                   d     ‚äï           q2
                                                                              g0
                                        m1


                                            q1               ‚äï
                                                     m2
                                   x0


        Figure 1: A RP robot, with associated coordinates q and relevant dynamic data.



                                                         1
Exercise #4
The Cartesian robot in Fig. 2 has the two links respectively of mass m1 and m2 , and carries a
payload mp . It moves under gravity and has relevant viscous friction at both joints. In the absence
of a priori information on the dynamic parameters, design an adaptive control law yielding global
asymptotic stabilization of the tracking error for a desired trajectory q d (t).


                                yw                      mp        g0

                                                       ‚äï m2


                                         m1                q2
                                         ‚äï
                                                                   xw
                                         q1

                        Figure 2: A Cartesian robot moving under gravity.


Exercise #5
A robot should close a door by firmly grasping its handle, pushing the door to the final position,
and then turning the handle to prepare the door locking. This interaction task is sketched in
Fig. 3. Write down the natural and artificial constraints, defining a suitable task frame. Propose
a time behavior for the hybrid references so as to cover the pushing phase and the final locking of
the door. As usual in planning of hybrid force-velocity tasks, neglect any friction or environment
compliance.



                z0                                                                     zh



                                                                                             xh



                                              y0
    x0

 Figure 3: The task of closing a door [left], with handle motion for the final door locking [right].



                                                   2
Exercise #6
With reference to Fig. 4, a planar 2R robot with links of unitary length (in [m]) is in the configu-
                         T                                        T
ration q = œÄ/2 ‚àíœÄ/2          [rad] and with a velocity qÃá = 0 œÄ/4      [rad/s] when a collision occurs.
Detail and comment the detection and isolation properties of the energy-based and momentum-
                                                                                                 T
based methods for the three cases of collision with the shown impact forces: i) F c1 = ‚àí1 0         [N]
                                        T                                     T
at the end-effector; ii) F c2 = 0 ‚àí1       [N] at the elbow; iii) F c3 = 0 1      [N] at the midpoint
of the second link.

                                  y0
                                             q2 = -p/2
                  Fc2 = (0 -1)T

                                                                  Fc1 = (-1 0)T
                         ùëûÃá 2 = p/4
                                                  Fc3 = (0 1)T

                                           q1 = p/2

                                                                    x0

                      Figure 4: Three cases of collision for a 2R planar robot.



                                                           [180 minutes (3 hours); open books]




                                                  3
                                                Solution
                                                June 5, 2020

Exercise #1
The SNS algorithm at the velocity level starts with checking whether the minimum norm solution
is feasible with respect to the joint velocity bounds. Using the pseudoinverse of the Jacobian J
and the Cartesian velocity v, we compute
                      Ô£´                     Ô£∂          Ô£´         Ô£∂
                        ‚àí1.1333 0.9309                 ‚àí1.3358         < ‚àíV1 = ‚àí1 !!
                 #                          Ô£∑ 2
qÃá 0 = qÃá P S = J v = Ô£≠ ‚àí0.2124 ‚àí0.3136 Ô£∏           = Ô£≠ ‚àí0.7383 Ô£∏ ‚áê ‚àà [‚àíV2 , V2 ] = [‚àí1.5, 1.5]
                      Ô£¨                                Ô£¨         Ô£∑
                                                 1
                         0.6914 ‚àí1.2345                   0.1482         ‚àà [‚àíV3 , V3 ] = [‚àí2, 2]

Therefore, we saturate the first joint velocity at its overdriven limit, qÃá1 = ‚àíV1 = ‚àí1 [rad/s], and
recompute the task velocity v 1 that needs to be executed with the remaining two joints,
                                                              ‚àí1
                                                                                  
                                                   2                               1
           v 1 = v ‚àí J 1 qÃá0,1 = v ‚àí J 1 (‚àíV1 ) =       ‚àí             (‚àí1) =             ,
                                                   1        ‚àí0.366               0.634

where by J i , i = 1, 2, 3, we denote the columns of the Jacobian J . We rewrite then the reduced
problem as
                                ‚àí1       ‚àí0.5
                                                                 
                                                               qÃá2
 J (‚àí1) := J 2 J 3 =                             , qÃá (‚àí1) :=            ‚áí      J (‚àí1) qÃá (‚àí1) = v 1 ,
                             ‚àí0.8660 ‚àí0.8660                    qÃá3

At this stage, the reduced solution is uniquely determined as
                                   ‚àí2 1.1547                   ‚àí1.2679
                                                                
            qÃá1,1                                      1
   qÃá 1 =           = J ‚àí1  v
                        (‚àí1) 1 =                            =            ‚áê both feasible!
            qÃá1,2                   2 ‚àí2.3094        0.634     0.5359

Recombining the joint velocity vector, we have the (minimum norm) feasible solution
                                    Ô£´       Ô£∂ Ô£´           Ô£∂
                                      qÃá0,1         ‚àí1
                             qÃá ‚àó = Ô£≠ qÃá1,1 Ô£∏ = Ô£≠ ‚àí1.2679 Ô£∏ [rad/s],
                                    Ô£¨       Ô£∑ Ô£¨           Ô£∑
                                      qÃá1,2       0.5359

and we can check that is satisfies indeed J qÃá ‚àó = v. Thus, task scaling is not needed here.

Exercise #2
In order to be the dynamic model of an actual 2-dof robot, the only condition is on the parameters
a and c, which need to guarantee the positive definiteness of the inertia matrix M . Thus
                      
                  a b
          M=             >0       ‚áê‚áí        a > 0, det M = ac ‚àí b2 > 0 ‚áí c > 0.
                   b c

Being the inertia constant, there are no Coriolis and centrifugal effects. Also, friction is neglected.
The 2-dof robot could be a planar arm with two prismatic joints (2P), whose axes are twisted by
an angle Œ±1 6= 0. Moreover, in order to include a constant gravity term only on the second joint,
the plane of motion is vertical and the first prismatic joint horizontal. We would have then for the
kinetic and potential energy
                       1          1
       T = T1 + T2 =     m1 qÃá12 + m2 (qÃá12 + qÃá22 + 2 cos Œ±1 qÃá1 qÃá2 ),   U = U2 = m2 g0 q2 sin Œ±1 ,
                       2          2

                                                       4
where m1 > 0 and m2 > 0 are the masses of the two links, so that the inertia matrix and the
gravity vector for this 2P robot are
                                                                           
                 a b          m1 + m2 m2 cos Œ±1             0             0
         M=              =                        ,  g=         =                   ,
                 b c          m2 cos Œ±1 m2                  d        m2 g0 sin Œ±1

with det M = m1 m2 + m22 (1 ‚àí cos Œ±1 ) > 0. Note that the coefficient b = m2 cos Œ±1 could be
positive or negative (depending on the twist angle |Œ±1 | < œÄ/2 or, respectively, > œÄ/2). Same for
d = m2 g0 sin Œ±1 (depending on the sign of Œ±1 ).
Looking now at the equilibrium condition (i.e., qÃà = 0) in the underactuated case, it is evident that
the second joint has to be the actuated one,
                                                               
                                                     0          0
                               g=u        ‚áí               =         .
                                                     d         ua
The equilibrium force at the second joint is ua = d (= m2 g0 sin Œ±1 ), the same for all equilibrium
configurations q e ‚àà R2 . When choosing a value ua > 0, the instantaneous acceleration qÃà1 of the
first (passive) joint is obtained from
                                             c ‚àíb                                ‚àíb
                                                                             
            qÃà1                        1                   0              1
     qÃà =         = M ‚àí1 (u ‚àí g) =                                 =                  (ua ‚àí d),
            qÃà2                      det M ‚àíb a         ua ‚àí d         ac ‚àí b2   a

and thus qÃà1 = b(d ‚àí ua )/(ac ‚àí b2 ). Being the determinant of M positive, the sign of qÃà1 will depend
on the sign of the product b(d ‚àí ua ). For instance, when b > 0 and for a large ua > |d|, the
acceleration of the first (passive) joint will be negative. On the other hand, the acceleration of the
second (actuated) joint will always be positive, as soon as the control force overcomes the gravity
term (ua > |d|).

Exercise #3
From Fig. 1, we have for the potential energy due to gravity
                         U (q) = U1 (q1 ) + U2 (q) = ‚àím1 g0 d cos q1 ‚àí m2 g0 q2 cos q1 .
Therefore, using the compact notation for trigonometric quantities, we have
                                                                   
                                   ‚àÇU (q)      (m1 d + m2 q2 )g0 s1
                           g(q) =         =                           ,
                                    ‚àÇq              ‚àím2 g0 c1
and then the symmetric matrix (representing the Hessian of U (q))
                                                                      
                             ‚àÇg(q)       (m1 d + m2 q2 )g0 c1 m2 g0 s1
                     A(q) =         =                                    .
                               ‚àÇq              m2 g0 s1          0
This matrix is not definite in sign. Therefore, in order to evaluate its norm, we have to use the
general form                               r                   
                                 kA(q)k = Œªmax AT(q)A(q) ,

and compute the real eigenvalues of the positive semi-definite, symmetric matrix1
                                        2             2
                                                                                   ! 
                 ((m1 d + m2 q2 )g0 c1 ) + (m2 g0 s1 ) m2 (m1 d + m2 q2 )g02 s1 c1
                                                                                                   
   T                                                                                   a1     a2
 A (q)A(q) =                              2                              2          =                  .
                       m2 (m1 d + m2 q2 )g0 s1 c1             (m2 g0 s1 )              a2     a3
  1 We   have a1 > 0, a3 ‚â• 0, and thus a1 + a3 > 0. Also, a1 a3 ‚àí a22 ‚â• 0.


                                                          5
From
                                   Œª ‚àí a1                     ‚àía2
                                                                    
        det ŒªI ‚àí AT(q)A(q) = det                                           = Œª2 ‚àí (a1 + a3 )Œª + (a1 a3 ‚àí a22 ),
                                    ‚àía2                      Œª ‚àí a3

we obtain the maximum (real and positive) eigenvalue as
                              p                                          p
     
        T
                 a +a
                     1    3     (a1 + a3 )2 ‚àí 4(a1 a3 ‚àí a22 )   a1 + a3 + (a1 ‚àí a3 )2 + 4a22
Œªmax A (q)A(q) =            +                                 =                              > 0.
                       2                    2                              2
Substituting the expressions of the ai ‚Äôs, we get
                  
 Œªmax AT(q)A(q)
                                                                                                           
   1
                                                 q
                              2               2                         2                        2        2
 =     ((m1 d + m2 q2 )g0 c1 ) + 2 (m2 g0 s1 ) + ((m1 d + m2 q2 )g0 c1 ) + 4 (m2 (m1 d + m2 q2 )g0 s1 c1 )
   2
                                                                                         
   1
                                                                  q
                              2               2                     2                   2
 =     ((m1 d + m2 q2 )g0 c1 ) + 2 (m2 g0 s1 ) + (m1 d + m2 q2 )g0 c1 + 4 (m2 g0 s1 c1 ) .
   2

This expression can be upper bounded in different ways, using also the upper limit for the prismatic
joint q2 ‚â§ L. Replacing for instance c1 ‚Üí 1, s1 ‚Üí 1, and q2 = L, we finally obtain the upper
bound                                   r                   
                                    kA(q)k =              Œªmax AT(q)A(q) ‚â§ Œ±

with2                 r
                1
                                                                                            q
                                              2                  2
            Œ±= ‚àö         ((m1 d + m2 L)g0 ) + 2 (m2 g0 ) + (m1 d + m2 L)g0                      1 + 4m22 g02 > 0.
                 2
This constant is used, e.g., in the proof of the global asymptotic stability of a PD control law with
gravity compensation g(q d ), in which the minimum (positive) value K P,m of the diagonal matrix
of proportional gains K P should satisfy K P,m > Œ±.

Exercise #4
The dynamic model of the Cartesian robot in Fig. 2 is very simple (in fact, this robot has a linear
and decoupled dynamics). We have
                              1          1
                                m1 qÃá12 + (m2 + mp ) qÃá12 + qÃá22 ,
                                                                
    T = T1 + T2 + Tp =                                                         U = U2 + Up = (m2 + mp )g0 q2 ,
                              2          2
and thus, from the Euler-Lagrange equations, considering also the presence of viscous friction

                                              M qÃà + g + F v qÃá = u,                                                          (1)

with
                                                                                                                 
                 m1 + m2 + mp           0                                 0                               fv1    0
        M=                                            ,    g=                           ,   Fv =                          .
                      0              m2 + mp                         (m2 + mp )g0                          0    fv2
   2 One may notice that there is a unit inconsistency of the terms in the expression of Œ±. In fact, we are taking the

norm of a matrix A(q) that has elements expressed in different units. This happens because the robot has joints
of different nature (revolute and prismatic): the gravity vector g(q) has the first component expressed in [Nm] (a
torque) and the second one in [N] (a force).




                                                             6
The dynamic model (1) can be linearly re-parametrized as

                                                      Y (qÃá, qÃà) a = u                                                     (2)

with                                                                                   Ô£´                         Ô£∂
                                                                                           m1 + m2 + mp
                                                                 
                                     qÃà1       0      qÃá1    0                      Ô£¨        m2 + mp             Ô£∑
                  Y (qÃá, qÃà) =                                        ,           a=Ô£¨                            Ô£∑.
                                                                                    Ô£¨                            Ô£∑
                                      0    qÃà2 + g0    0    qÃá2                     Ô£≠           fv1              Ô£∏
                                                                                                fv2
The adaptive control law for tracking a desired trajectory q d (t) (at least twice differentiable w.r.t.
time) is
                       u = Y (qÃá r , qÃà r ) aÃÇ + K P e + K D eÃá, K P , K D > 0,
                                                                                                    (3)
                       Àô = ŒìY (qÃá , qÃà ) (qÃá ‚àí qÃá) , Œì > 0,
                       aÃÇ       T
                                      r      r   r

with e = q d ‚àí q, eÃá = qÃá d ‚àí qÃá, qÃá r = qÃá d + Œõe, and qÃà r = qÃà d + ŒõeÃá (Œõ = K P K ‚àí1
                                                                                     D > 0), and where
                                                                            
                                                    qÃàr1     0      qÃár1 0
                               Y (qÃá r , qÃà r ) =                              .
                                                      0 qÃàr2 + g0 0 qÃár2

The gain matrices K P , K D , and Œì are taken diagonal. We additionally remark the following.

   ‚Ä¢ The problem is fully decoupled into parallel subproblems for each of the two prismatic joints.
     Consider for instance the first joint. From eqs. (1), (2), and (3), we have for the closed-loop
     system
                     (m1 + m2 + mp )qÃà1 + fv1 qÃá1 = u1 ,
                                                            u1 = aÃÇ1 qÃàr1 + aÃÇ3 qÃár1 + kp1 e1 + kd1 eÃá1 ,
                                                            aÃÇÀô 1 = Œ≥1 qÃàr1 (qÃár1 ‚àí qÃá1 ),
                                                            aÃÇÀô 3 = Œ≥3 qÃár1 (qÃár1 ‚àí qÃá1 ),
                                                                          kP 1                            kP 1
       with e1 = qd1 ‚àí q1 , eÃá1 = qÃád1 ‚àí qÃá1 , qÃár1 = qÃád1 +              kD1    e1 , and qÃàr1 = qÃàd1 +   kD1    eÃá1 .
   ‚Ä¢ Despite the linear dynamics of the considered robot, the closed-loop system is indeed still
     nonlinear because of the interplay between the robot state x = (q, qÃá) ‚àà R4 and the state
     aÃÇ ‚àà R4 of the adaptive controller.

Exercise #5
With reference to Fig. 5, where a possible task frame is defined, the xt and z t axes of the task
frame have been chosen to coincide with the homologous ones at the door handle. The natural
constraints are the following:

                 vx = 0,         vz = 0,          œâx = 0,             œâz = 0,              fy = 0,        ¬µy = 0.

In these constraints, we neglect any friction effect and mass/inertia or compliance of the environ-
ment (which is thus assumed to be purely geometric). The complementary artificial constraints
are chosen then as:

           fx = 0,       fz = 0,            ¬µx = 0,         ¬µz = 0,                vy = vd,y (t),         œây = œâd,y (t).

The first four (zero) values for forces and moments that are assigned as references to the hybrid
task controller reflect the desire to limit the mechanical stress on the door handle grasped by the


                                                                  7
robot end-effector. The last two time-varying references are used instead to specify the way feasible
motions are handled during the task of closing a door. While moving the door, we set œâd,y = 0 (no
motion around the rotation axis y h = y t of the door handle). On the other hand, the time law
vd,y (t) will define the way the door closing should be performed, e.g., with a trapezoidal profile for
a rest-to-rest motion from the initial position (door open) to the desired approach position (door
nearly closed), using a fast or slow cruise speed. When the approach position is reached, the linear
motion is ended (vd,y = 0) and œâd,y (t) is used to turn the handle, preparing it for the final phase
of door locking. Note finally that when the door touches the door frame on the wall, the contact
situation changes and, accordingly, also the definition of natural and artificial constraints.



                z0                                                                         zh
                                                                                     zt
                                                                                              xt
                             zt
                                           yt                                                    xh
                                                                       wd,y(t)
                                           vd,y(t)
                                      xt

                                                y0
    x0

Figure 5: Two views of the task frame assignment for closing a door, with associated time-varying
specification of two artificial constraints.


Exercise #6
The energy-based method fails to detect a collision when qÃá = 0 or, more in general, when the
colliding force F c is orthogonal to               v c of the contact point. In fact, in this case we
                                       the velocity
                           T
have v Tc F c = (J c (q)qÃá) F c = qÃá T J Tc (q)F c = qÃá T œÑ c = 0, thus not exciting the scalar residual œÉ.
                                                 T
In the given configuration q = œÄ/2 ‚àíœÄ/2              of the planar 2R robot, we verify this condition for
the three considered cases:
                    ‚àí1 0                                                                 ‚àí1
                                                                                          
                                 0             0
v c1 = J c1 qÃá =                        =            [m/s] ‚áí v Tc1 F c1 = 0 œÄ/4                    = 0;
                     1 1        œÄ/4           œÄ/4                                             0

                    ‚àí1 0
                                                                                
                                 0                          T
                                                                                 0
v c2 = J c2 qÃá =                        =0        ‚áí       v c2 F c2 = 0 0              = 0;
                     0 0        œÄ/4                                              ‚àí1

                    ‚àí1 0
                                                                                   
                                    0            0                                      0
v c3 = J c3 qÃá =                           =            [m/s] ‚áí v Tc3 F c3 = 0 œÄ/8              = œÄ/8 [Nm].
                    0.5 0.5       œÄ/4          œÄ/8                                         1

Therefore, only in the third case we are able to detect the occurrence of a collision with the
energy-based method.


                                                     8
As for the momentum-based method, a collision is detected (and possibly isolated) provided
                                                                                        n       F c is
                                                                                                o
                                                                                           T
not in the null space of the transpose of the contact Jacobian J c . In fact, if F c ‚àà N J c (q) the
contact force is balanced by the reaction of the rigid robot structure, yielding œÑ c = J Tc (q)F c = 0
and thus not exciting the residual vector r. We verify next if the detection condition holds for the
three considered cases, drawing also conclusions on the isolation property. For the tip contact on
link 2:
                    ‚àí1 1                          ‚àí1
                                                                                   
   n
       T
         o                                                   n
                                                                T
                                                                  o
                                                                               T            1
 N J c1 = N                    = ‚àÖ ‚áí F c1 =              6‚àà N J c1 , œÑ c1 = J c1 F c1 =         [Nm].
                     0 1                           0                                        0

Therefore, this collision will be detected with the momentum-based method (contrary to what
happens with the energy-based method). However, the second component r2 of the residual vector
will be unaffected (being œÑc1,2 = 0), leading to the wrong conclusion that the contact occurred on
link 1. Indeed, this is a singular situation for the isolation property (the contact force vector F c1
passes through the axis of joint 2). For the contact at the robot elbow:

                     ‚àí1 0
                                                           
    n    o                              0                      0         n    o
 N J Tc2 = N                     =Œ±            ‚áí F c2 =             ‚àà N J Tc2 , œÑ c2 = J Tc2 F c2 = 0.
                      0 0               1                     ‚àí1

Therefore, also the momentum-based method is not able to detect this collision. In fact, the contact
force vector F c2 passes through both joint axes and is balanced entirely by the internal reaction
force of the robot structure. Finally, for the contact at the midpoint of link 2:

                    ‚àí1 0.5
                                                                                         
   n    o                                           0         n    o                        0.5
N J Tc3 = N                      = ‚àÖ ‚áí F c3 =            6‚àà N J Tc3 , œÑ c3 = J Tc3 F c3 =         [Nm].
                     0 0.5                          1                                       0.5

Therefore, the momentum-based method detects the collision and also correctly isolates the contact
as occurring on the second link.


                                              ‚àó‚àó‚àó‚àó‚àó




                                                  9
